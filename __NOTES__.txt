
= TODOS =

- Jackalope::WebService
    - write a schema -> router generator
        - Plack::App::Path::Router?
        - use the metadata to supply controller/action stuff
            - have controller/action lookup Bread::Board service
    - add a spec schema to the spec which we can use
      to make a demo spec web service

== LOW PRIORITY ==

- Jackalope.js
    - add some kind of basic Bread-Board type thing

- Jackalope::Schema::Spec & Jackalope.Schema.Spec
    - make better use of the typemap to clean
      up some code
    - perhaps use that description cleanup method in GenerateSpec on the actual spec

- Test::Jackalope & Test.Jackalope
    - write .toJSON methods that strip the __compiled_* stuff from the output of schemas
    - validation_fail should also take some kind of
      test to check the right error appears
        - fixtures will need to support this too

- Jackalope::Script::GenerateSpec
    - fix the JSON purty stuff, need to
      see if encode_json takes options

- test_fixtures
    - write more of them

- Jackalope::Schema::Repository
    - add a resolve_ref method
    - add a get_compiled_schema method
        - expect a URI
    - add a get_compiled_schema_for_type method
    - refactor the schema compiling

- Jackalope::Schema::Validator::Core
    - make it use Moose types to check against

- Jackalope::Serializer
    - Jackalope::Serializer::XML (TODO - perigrin)
    - Jackalope::Serializer::YAML (why??)

== PERHAPS ==

- Jackalope::API::*
    - create a set of roles that can be used
      in the Bread::Board config to typemap
      to concrete classes
    - NOTE: I tried this, it didn't feel right
      but should keep the idea around just in case
